# cloudbuild.yaml
# ────────────────────────────────────────────────────────────────
# 커밋 → 이미지 빌드 → Artifact Registry 푸시
# _REGION, _REPOSITORY, _IMAGE_NAME 값만 바꾸면 됩니다.

substitutions:
  _REGION: us-central1          # 예: asia, us, europe…
  _REPOSITORY: rua-backend     # Artifact Registry 저장소 이름
  _IMAGE_NAME: backend # 이미지 이름

options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # 1) (선택) 의존성 설치·테스트
  - id: Test
    name: node:18
    entrypoint: bash
    args:
      - -c
      - |
        corepack enable                         # pnpm 내장 활성화
        corepack prepare pnpm@latest --activate
        pnpm install --frozen-lockfile
        pnpm test || true                       # 테스트 없으면 통과

  # 2) 이미지 빌드
  - id: Build
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - -f
      - Dockerfile
      - -t
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA'
      - .

  # 3) 푸시 (SHA 태그)
  - id: Push
    name: gcr.io/cloud-builders/docker
    args:
      - push
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA'

  # 4) latest 태그 부여·푸시
  - id: Tag latest
    name: gcr.io/cloud-builders/docker
    args:
      - tag
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:latest'

  # 5) Cloud Deploy 릴리스 생성 → dev 배포
  - id: Release
    name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: gcloud
    args:
      - deploy
      - releases
      - create
      - rel-${SHORT_SHA}                     # 릴리스 이름(커밋 짧은 SHA)
      - --delivery-pipeline=rua-backend-gke-deploy-pipeline-1
      - --region=asia-northeast1
      - --annotations=commitId=${COMMIT_SHA}
      - --images=backend=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA


images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:latest'
